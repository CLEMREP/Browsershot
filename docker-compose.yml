version: "3.8"

volumes:
    postgres:

services:
    chrome:
        image: zenika/alpine-chrome:latest
        entrypoint: [ "chromium-browser", "--headless", "--disable-gpu", "--disable-software-rasterizer", "--disable-dev-shm-usage", "--no-sandbox", "--remote-debugging-address=0.0.0.0", "--remote-debugging-port=9222" ]
        ports:
            - "9222:9222"
        networks:
            - web

    php-fpm:
        image: registry.clement-repel.fr/${IMAGE_NAME}-fpm-server:latest
        container_name: php-fpm
        restart: unless-stopped
        env_file:
            - .env
        networks:
            - web

    web:
        image: registry.clement-repel.fr/${IMAGE_NAME}-web-server:latest
        container_name: ${IMAGE_NAME}-web-server
        restart: unless-stopped
        ports:
            - "8081:80"
        labels:
            - traefik.enable=true
            - traefik.http.routers.app.rule=Host(`app.clement-repel.fr`, `clement-repel.fr`)
            - traefik.http.routers.app.entrypoints=websecure
            - traefik.http.routers.app.tls=true
            - traefik.http.routers.app.tls.certresolver=lets-encrypt
        env_file:
            - .env
        networks:
            - web

    init-db:
        image: registry.clement-repel.fr/${IMAGE_NAME}-cli:latest
        container_name: ${IMAGE_NAME}-cli
        depends_on:
            - db
        env_file:
            - .env
        entrypoint:
            - sh
            - -c
            - |
                echo "### Check PostgreSQL connectivity";
                until pg_isready \
                  --host=${DB_HOST} \
                  --port=${DB_PORT} \
                  --user=${DB_USERNAME} \
                  --dbname=${DB_DATABASE};
                  do echo "waiting for service to respond..."; sleep 2; done;
                echo "### Run migrations with seeders" && \
                php artisan migrate:fresh --seed --force && \
                echo "### Clean cache" && \
                php artisan config:cache;
        networks:
            - web

    php-queue:
        image: registry.clement-repel.fr/${IMAGE_NAME}-cli:latest
        container_name: php-queue
        restart: unless-stopped
        depends_on:
            - db
        env_file:
            - .env
        entrypoint:
            - sh
            - -c
            - php artisan queue:work --tries=3 --max-time=3600
        networks:
            - web

    db:
        image: postgres:latest
        container_name: postgres
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - postgres:/var/lib/postgresql/data
        networks:
            - web

networks:
    web:
        external: true
        driver: bridge
